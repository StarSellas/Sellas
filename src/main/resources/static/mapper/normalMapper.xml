<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sellas.web.normal.NormalDAO">

<select id="normalBoardList" parameterType="String" resultType="Map"> 
SELECT *, (SELECT COUNT(*) FROM normaltradeview) as count 
FROM normaltradeview 
ORDER BY tno DESC
LIMIT 10 
</select>

<select id="sortNormalList" parameterType="Map" resultType="Map">
SELECT * ,(SELECT COUNT(*) FROM normaltradeview WHERE ino = #{ino}) as count
FROM normaltradeview
WHERE ino = #{ino}
${orderBy}
LIMIT 10
</select>

<select id="normalSearchList" parameterType="Map"
   resultType="Map">
   SELECT *, (SELECT COUNT(*) FROM normaltradeview
   WHERE <if test="ino gt 0">ino = #{ino} AND</if>
   <choose>
      <when test="searchCate == 'title'">ttitle LIKE CONCAT('%', #{search}, '%')</when>
      <when test="searchCate == 'content'">tcontent LIKE CONCAT('%', #{search}, '%')</when>
      <when test="searchCate == 'writer'">mnickname LIKE CONCAT('%', #{search}, '%')</when>
   </choose>
   ) as count
   FROM normaltradeview
   WHERE <if test="ino gt 0">ino = #{ino} AND</if>
   <choose>
      <when test="searchCate == 'title'">ttitle LIKE CONCAT('%', #{search}, '%')</when>
      <when test="searchCate == 'content'">tcontent LIKE CONCAT('%', #{search}, '%')</when>
      <when test="searchCate == 'writer'">mnickname LIKE CONCAT('%', #{search}, '%')</when>
   </choose>
   ${orderBy}
   LIMIT 10
</select>

<select id="nextNormalBoardList" parameterType="Map" resultType="Map">
SELECT *, (SELECT COUNT(*) FROM normaltradeview 
	WHERE
	   <choose>
	      <when test="searchCate == 'title'">ttitle LIKE CONCAT('%', #{search}, '%')</when>
	      <when test="searchCate == 'content'">tcontent LIKE CONCAT('%', #{search}, '%')</when>
	      <when test="searchCate == 'writer'">mnickname LIKE CONCAT('%', #{search}, '%')</when>
	   </choose>
   ) as count
	FROM normaltradeview 
	WHERE
	<if test="search eq Nosearch">search = #{search} AND</if>
   <choose>
      <when test="searchCate == 'title'">ttitle LIKE CONCAT('%', #{search}, '%')</when>
      <when test="searchCate == 'content'">tcontent LIKE CONCAT('%', #{search}, '%')</when>
      <when test="searchCate == 'writer'">mnickname LIKE CONCAT('%', #{search}, '%')</when>
   </choose>
   ${orderBy}
   LIMIT ${startpage}, ${pageCount}
</select>


<select id="nextsortNormalList" parameterType="Map" resultType="Map">

SELECT *, (SELECT COUNT(*) FROM normaltradeview 
	WHERE <if test="ino gt 0">ino = #{ino} AND</if>
	   <choose>
	      <when test="searchCate == 'title'">ttitle LIKE CONCAT('%', #{search}, '%')</when>
	      <when test="searchCate == 'content'">tcontent LIKE CONCAT('%', #{search}, '%')</when>
	      <when test="searchCate == 'writer'">mnickname LIKE CONCAT('%', #{search}, '%')</when>
	   </choose>
   ) as count
	FROM normaltradeview 
	WHERE <if test="ino gt 0">ino = #{ino} AND</if>
   <choose>
      <when test="searchCate == 'title'">ttitle LIKE CONCAT('%', #{search}, '%')</when>
      <when test="searchCate == 'content'">tcontent LIKE CONCAT('%', #{search}, '%')</when>
      <when test="searchCate == 'writer'">mnickname LIKE CONCAT('%', #{search}, '%')</when>
   </choose>
   ${orderBy}
   LIMIT ${startpage}, ${pageCount}
</select>


<select id="cateList" resultType="Map">
SELECT *
FROM itemcategory
ORDER BY ino ASC
</select>

<select id="mainMember" parameterType="String" resultType="Map">
SELECT *
FROM member
WHERE muuid = #{muuid}
</select>

<insert id="normalWrite" parameterType="Map">
INSERT INTO trade (ino, muuid, ttype, ttitle, tcontent, tnormalprice, tnormalstate)
VALUES (#{category},#{muuid},#{ttype},#{ttitle},#{tcontent},#{tnormalprice}, #{tnormalstate})

 <selectKey keyProperty="tno" order="AFTER" resultType="java.lang.Integer">
        SELECT LAST_INSERT_ID() AS tno
    </selectKey>
</insert>


<insert id="insertTradeimg" parameterType="Map">
	INSERT INTO tradeimage (tno, timage)
	VALUES (#{tno}, #{realFileName})
</insert>

<update id="setThumbnail" parameterType="String">
UPDATE tradeimage
SET tthumbnail = 0
WHERE timage = #{realFileName}
</update>



<select id="normalDetail" parameterType="Integer" resultType="Map">
SELECT *
FROM normaltradeview
WHERE tno = #{tno}
</select>

<update id="normalTreadUpdate" parameterType="Integer">
UPDATE trade
SET tread = tread+1
WHERE tno = #{tno}
</update>

<select id="normalDetailCount" parameterType="Integer" resultType="Integer">
SELECT COUNT(*)
FROM tradeimage
WHERE tno  = #{tno}
</select>

<select id="normalDetailImage" parameterType="Integer" resultType="Map">
SELECT timage
FROM tradeimage
WHERE tno = #{tno}
</select>

<update id="normalDelete" parameterType="Map">
UPDATE trade
SET tnormalstate = 3
WHERE tno = #{tno} and muuid=#{muuid}
</update>

<insert id="fillWhalePay">
INSERT INTO fill (muuid, camount)
VALUES ((SELECT muuid FROM member WHERE mnickname = #{mnickname}), #{money})
</insert>

<update id="normalEdit" parameterType="Map">
UPDATE trade
SET ttitle = #{ttitle},  ino = #{ino}, tcontent = #{tcontent}, tnormalprice = #{tnormalprice}
where tno =#{tno}
</update>

<delete id="normalDeleteEditImage" parameterType="Map">
    DELETE FROM tradeimage
    WHERE tno = #{tno}
        and timage = #{Original1}
    <if test="Original2 != null">
        or timage = #{Original2}
    </if>
    <if test="Original3 != null">
        or timage = #{Original3}
    </if>
    <if test="Original4 != null">
        or timage = #{Original4}
    </if>
</delete>

<select id="SelectnormalThumbnail" parameterType="Map" resultType="Integer">
SELECT COUNT(*)
FROM tradeimage
WHERE tno = #{tno} and tthumbnail = 0
</select>

<select id="selectTnormalstate" parameterType="Map" resultType="Integer">
SELECT tnormalstate
from trade
where tno = #{tno}

</select>


<select id="selectMamountForTrade" parameterType="Map" resultType="Integer">
SELECT mbalance
FROM member
WHERE mnickname = #{mnickname}
</select>

<update id="takeMamount" parameterType="Map">
UPDATE member
SET mbalance = mbalance-#{tnormalprice}
WHERE muuid = #{pbuyer}
</update>

<update id="changeStateForNormal" parameterType="Map">
UPDATE trade
SET tnormalstate = #{state}
WHERE tno = #{tno}
</update>

<insert id="insertPaymentForNormal" parameterType="Map">
INSERT INTO payment (tno, pseller, pbuyer, psellerok, pbuyerok, pamount, pstate)
VALUES(#{tno}, #{pseller},#{pbuyer}, 2, 2, #{tnormalprice}, 2 )
</insert>

<update id="fillMamount" parameterType="Map">
UPDATE member
SET mbalance = mbalance + #{money}
WHERE mnickname = #{mnickname}
</update>

<select id="normalTradePaymentCountCount" parameterType="Map" resultType="Integer">
SELECT COUNT(*)
FROM payment
WHERE tno = #{tno} and pseller = (SELECT muuid FROM member WHERE mnickname = #{sellerMnickname}) and pbuyer = (SELECT muuid FROM member WHERE mnickname = #{mnickname})

</select>

<select id="buyerOrSeller" parameterType="Map" resultType="Map">
 SELECT
		 (SELECT COUNT(*) FROM payment WHERE pbuyer = #{muuid} AND tno = #{tno}) AS buyer,
		 (SELECT COUNT(*) FROM payment WHERE pbuyer != #{muuid} AND tno = #{tno}) AS seller,
		 (SELECT pamount FROM payment WHERE tno = #{tno} and pstate = 2) AS pamount
</select>


<update id="recieveChecked" parameterType="Map">
UPDATE payment
SET ${ok} = 0
WHERE tno = #{tno} and pstate = 2

</update>

<select id="selectPaymentResult" parameterType="Map" resultType="Integer">
SELECT COUNT(*)
FROM payment
WHERE tno=#{tno} and psellerok = 0 and pbuyerok = 0 and pstate = 2
</select>

<update id="changePstateForNormal" parameterType="Map">
UPDATE payment
SET pstate = #{pstate}, penddate = CURRENT_TIMESTAMP
WHERE tno = #{tno}
</update>

<update id="giveMamountForSeller" parameterType="Map">
UPDATE member
SET mbalance = mbalance + #{pamount}
WHERE muuid = (SELECT pseller FROM payment WHERE tno=#{tno} AND pstate = 0)
</update>

<update id="normalTradeFail" parameterType="Map">
UPDATE payment
SET ${ok}= 1,pstate = 1, penddate = CURRENT_TIMESTAMP, ptradereject = #{who}, ptraderejectreason = #{reason}
WHERE tno = #{tno} and pstate = 2
</update>

<select id="selectBuyer" parameterType="Map" resultType="String">
SELECT muuid
FROM member
WHERE muuid = (SELECT pbuyer FROM payment WHERE tno = #{tno} and pstate = 2)
</select>

<update id="mamountReturn" parameterType="Map" >
UPDATE member
SET mbalance = mbalance + #{pamount}
WHERE muuid = #{buyer}
</update>

<select id="alarmCount" parameterType="String" resultType = "Integer">
	select COUNT(*) from alarm where oseller = #{muuid} and acheck = 1
</select>

<select id="productAmount" parameterType="Integer" resultType="Integer">
	select tnormalprice from trade where tno = #{tno}
</select>

<select id="obuyerAmounts" parameterType="String" resultType="Integer">
	select mbalance from member where muuid = #{obuyer}
</select>

<select id="obuyerUuid" parameterType="Map" resultType="String">
	select obuyer from onlinechat where ouuid = #{roomId} and oseller = #{pseller}
</select>

<select id="hasWish" parameterType="Map" resultType="Map">
    SELECT wno
    FROM wishlist
    WHERE tno=#{tno} 
    AND muuid=#{muuid}
</select>

<select id="SelectLastTno" resultType="Integer">
SELECT MAX(tno) FROM trade;
</select>

<update id="normalHikeUp" parameterType="Map">
UPDATE trade
SET tno = #{LastTno}, tnormalhikeup = tnormalhikeup +1
WHERE tno = #{tno}
</update>

<select id="findAuctionStoryById" parameterType="String" resultType="Map">
   SELECT ah.*, ah.abiddate AS tdate, ti.timage, t.ttitle,
           CASE 
             WHEN ah.astate = 1 THEN 3
             WHEN ah.astate = 2 THEN 1
             WHEN ah.astate = 0 THEN 2
             ELSE 4 -- 다른 상태
           END AS bid_order
    FROM auctionhistory ah
    JOIN trade t ON ah.tno = t.tno
    LEFT JOIN tradeimage ti ON t.tno = ti.tno
    WHERE ah.abidder =#{muuid} AND (ti.tthumbnail = 0 OR ti.tthumbnail IS NULL)
      AND (ah.tno, ah.abiddate) IN (
        SELECT ah_sub.tno, MAX(ah_sub.abiddate)
        FROM auctionhistory ah_sub
        WHERE ah_sub.abidder =#{muuid}
        GROUP BY ah_sub.tno
        HAVING COUNT(*) >= 1
      )
    ORDER BY bid_order, ah.ano DESC;
</select>



</mapper>