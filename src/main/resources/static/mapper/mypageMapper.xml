<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sellas.web.myPage.MyPageDAO">

<select id="findId" parameterType="String" resultType="com.sellas.web.myPage.ReviewDTO">
SELECT pno, tno, pseller, pbuyer, pstate FROM payment
WHERE tno=#{tno} AND pstate=0
</select>


<insert id="inputReview" parameterType="com.sellas.web.myPage.ReviewDTO">
INSERT INTO review (pno, mwriter, rcontent, rpoint, mtarget)
VALUES(#{pno}, #{muuid}, #{rcontent}, #{rpoint},#{targetMember})
</insert>


<update id="updatePoint" parameterType="com.sellas.web.myPage.ReviewDTO">
UPDATE member SET mpoint=mpoint+#{rpoint} WHERE muuid=#{targetMember}
</update>


<select id="getprofileReview" parameterType="Object" resultType="Map">
    SELECT r.rno, r.pno, r.mwriter, r.rcontent, r.rdate, m.mnickname, m.mphoto
    FROM review r
    JOIN member m ON r.mwriter = m.muuid
    WHERE r.mtarget = #{muuid}
</select>



<select id="memberInfo" parameterType="String" resultType="Map">
	SELECT mnickname, mpoint, mbalance, mphoto
	FROM member
	WHERE muuid=#{uuid}
</select>


<select id="isNicknameExists" parameterType="String" resultType="int">
	SELECT COUNT(*)
	FROM member
	WHERE mnickname=#{newNickname}
</select>


<update id="nicknameModify" parameterType="Map">
UPDATE member SET mnickname=#{newNickname} WHERE muuid=#{uuid}
</update>


<update id="photoModify" parameterType="Map">
UPDATE member SET mphoto=#{mphoto} WHERE muuid=#{uuid}
</update>

<select id="photoModifySubmit" parameterType="String">
SELECT COUNT(*)
	FROM member
	WHERE muuid=#{uuid}
</select>


<select id="reviewDetail" parameterType="Map" resultType="Map">
SELECT r.mwriter, r.mtarget, m1.mnickname as writer_nickname, m2.mnickname as target_nickname,
       r.rcontent, r.rdate, t.ttitle, r.rno, t.tno,
       CASE WHEN (SELECT COUNT(*) FROM review WHERE pno = p.pno) >= 2 THEN 'Y' END hastno
FROM review r
JOIN payment p ON r.pno = p.pno
JOIN trade t ON p.tno = t.tno
JOIN member m1 ON r.mwriter = m1.muuid
JOIN member m2 ON r.mtarget = m2.muuid
WHERE p.pno IN (SELECT pno FROM review WHERE rno=#{rno}) AND r.mtarget=#{uuid};
</select>

<select id="reviewDetailByMe" parameterType="Map" resultType="Map">
SELECT r.mwriter, r.mtarget, m1.mnickname as writer_nickname, m2.mnickname as target_nickname,
       r.rcontent, r.rdate, t.ttitle, t.tno,
       CASE WHEN (SELECT COUNT(*) FROM review WHERE pno = p.pno) >= 2 THEN 'Y' END hastno
FROM review r
JOIN payment p ON r.pno = p.pno
JOIN trade t ON p.tno = t.tno
JOIN member m1 ON r.mwriter = m1.muuid
JOIN member m2 ON r.mtarget = m2.muuid
WHERE p.pno IN (SELECT pno FROM review WHERE rno=#{rno}) AND r.mwriter=#{uuid}
</select>


<select id="getSell" parameterType="String" resultType="Map">
SELECT t.*, r.* , ti.timage,
       CASE WHEN r.mwriter=#{uuid} THEN 'Y' ELSE r.mwriter END writeYN,
       CASE WHEN (SELECT COUNT(*) FROM review WHERE pno = p.pno) >= 2 THEN 'Y' END hastno
FROM trade t
JOIN tradeimage ti ON t.tno = ti.tno
LEFT JOIN payment p ON t.tno = p.tno
LEFT JOIN review r ON r.pno = p.pno
WHERE t.muuid=#{uuid} AND ti.tthumbnail = 0 AND tnormalstate != 3;
</select>


<select id="getBuy" parameterType="String" resultType="Map">
SELECT p.pno, p.penddate, t.tno, t.ttitle, t.tdate, t.tnormalprice, ti.timage, t.tnormalstate, r.rno,
       CASE WHEN r.mwriter =#{uuid} THEN 'Y' ELSE r.mwriter END writeYN,
       CASE WHEN (SELECT COUNT(*) FROM review WHERE pno = p.pno) >= 2 THEN 'Y' END hastno
FROM payment p
LEFT JOIN review r ON r.pno = p.pno
JOIN trade t ON p.tno = t.tno
JOIN tradeimage ti ON t.tno = ti.tno
WHERE pbuyer =#{uuid} AND pstate = 0 AND ti.tthumbnail = 0;
</select>



<select id="getAucSell" parameterType="String" resultType="Map">
SELECT t.*, r.* , ti.timage,
       CASE WHEN r.mwriter=#{uuid} THEN 'Y' ELSE r.mwriter END writeYN,
       CASE WHEN (SELECT COUNT(*) FROM review WHERE pno = p.pno) >= 2 THEN 'Y' END hastno
FROM trade t
JOIN tradeimage ti ON t.tno = ti.tno
LEFT JOIN payment p ON t.tno = p.tno
LEFT JOIN review r ON r.pno = p.pno
WHERE t.muuid=#{uuid} AND ti.tthumbnail = 0 AND ttype = 1;
</select>


<select id="getWish" parameterType="String" resultType="Map">
SELECT w.wno, w.muuid, t.tno, t.ttitle, t.tdate, t.tnormalprice, t.tnormalstate, ti.timage
FROM wishlist w
JOIN trade t ON w.tno = t.tno
JOIN tradeimage ti ON t.tno = ti.tno
WHERE w.muuid =#{uuid} AND (ti.tthumbnail = 0 OR ti.timage IS NULL)
</select>


<insert id="addWish" parameterType="Map">
INSERT INTO wishlist (tno, muuid)
VALUES(#{tno}, #{muuid})
</insert>

<delete id="delWish" parameterType="Map">
DELETE FROM wishlist WHERE muuid=#{muuid} AND tno=#{tno}
</delete>


<select id="getMyPost" parameterType="String" resultType="Map">
	SELECT * FROM boardview
	WHERE mnickname=#{nickname}
	ORDER BY bno DESC;
	
</select>

<select id="getMyComment" parameterType="String" resultType="Map">
	SELECT c.*, b.sno, b.btitle
	FROM commentview c
	JOIN board b ON c.bno = b.bno
	WHERE mnickname=#{nickname}
</select>


</mapper>